import asyncio
import requests
from bs4 import BeautifulSoup
from telegram import Bot
import os

# CONFIGURACI√ìN DEL BOT
TOKEN = os.environ['TELEGRAM_BOT_TOKEN']
MI_CHAT_ID = "1259839619"
bot = Bot(token=TOKEN)

# URL de la p√°gina de noticias
URL = 'https://www.uniatlantico.edu.co/noticias/'

# Nombre del archivo donde se guarda el √∫ltimo titular enviado
ARCHIVO_ULTIMO_TITULAR = "ultimo_titular.txt"

# Intentar leer el √∫ltimo titular guardado desde el archivo
def obtener_ultimo_titular_guardado():
    if os.path.exists(ARCHIVO_ULTIMO_TITULAR):
        with open(ARCHIVO_ULTIMO_TITULAR, 'r') as file:
            return file.read().strip()
    return None

# Guardar el √∫ltimo titular enviado
def guardar_ultimo_titular(titular):
    with open(ARCHIVO_ULTIMO_TITULAR, 'w') as file:
        file.write(titular)

# Obtener los titulares m√°s recientes de la p√°gina
def obtener_titulares():
    response = requests.get(URL)
    soup = BeautifulSoup(response.text, 'html.parser')
    titulares = []

    for h3 in soup.find_all('h3'):
        enlace = h3.find('a')
        if enlace:
            texto = enlace.get_text(strip=True)
            url = enlace['href']
            if texto and url:
                titulares.append((texto, url))

    return titulares  # los titulares m√°s recientes son los primeros en la lista

# Enviar los titulares nuevos
async def enviar_titulares(titulares):
    for titular, url in reversed(titulares):  # enviar del m√°s viejo al m√°s nuevo
        mensaje = f"üì∞ {titular}\nüîó Lee m√°s: {url}"
        try:
            await bot.send_message(chat_id=MI_CHAT_ID, text=mensaje)
            print(f"‚úÖ Enviado: {titular}")
        except Exception as e:
            print(f"‚ùå Error al enviar: {titular}")
            print(f"üõë Detalle del error: {e}")

async def main():
    ultimo_titular = obtener_ultimo_titular_guardado()  # obtener el √∫ltimo enviado
    while True:
        titulares = obtener_titulares()
        nuevos = []

        # Solo enviar los titulares que son m√°s recientes que el √∫ltimo enviado
        for titular, url in titulares:
            if titular == ultimo_titular:  # Cuando encontramos el √∫ltimo enviado, dejamos de agregar
                break
            nuevos.append((titular, url))

        if nuevos:
            print(f"‚úâÔ∏è Enviando {len(nuevos)} titulares nuevos...")
            await enviar_titulares(nuevos)

        if titulares:
            ultimo_titular = titulares[0][0]  # actualizamos con el m√°s reciente
            guardar_ultimo_titular(ultimo_titular)  # guardamos el √∫ltimo enviado

        await asyncio.sleep(300)  # espera 5 minutos

if __name__ == "__main__":
    asyncio.run(main())
